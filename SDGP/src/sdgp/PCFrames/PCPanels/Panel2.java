/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sdgp.PCFrames.PCPanels;

import java.awt.Component;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import sdgp.db;

/**
 *
 * @author MD
 */
public class Panel2 extends javax.swing.JPanel {
    private static Statement st;
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    DefaultListModel defaultListModel = new DefaultListModel();
    String country;

    /**
     * Creates new form Panel2
     */
    public Panel2() {
        initComponents();
        conn = db.EU_data();
        countryContributors.setVisible(false);
    }
    
    public void setCountry(String choice){
        this.country = choice;
        countryName.setText(country);
        this.bindData();
    }
    
    public String getCountry(){
        return this.country;
    }
            
    // Creates list of contributors for given country
    private ArrayList getContributors() {
        ArrayList contrib = new ArrayList();
        try {
            String sql = "SELECT name FROM DataSet WHERE country ='"+ getCountry() +"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                String name = rs.getString("name");
                contrib.add(name);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Add code here for adding contributors to the list from SQL Query
        return contrib;
    }

    // Bind data to jList
    public void bindData() {

        getContributors().stream().forEach((contrib) -> {
            defaultListModel.addElement(contrib);
        });
        countryContributors.setModel(defaultListModel);
        countryContributors.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        largeContributors.setModel(defaultListModel);
        largeContributors.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    // search through contributors by name
    private void searchFilter(String searchTerm) {

        DefaultListModel filteredItems = new DefaultListModel();
        ArrayList contribs = getContributors();

        contribs.stream().forEach((contrib) -> {
            String contribName = contrib.toString().toLowerCase();
            if (contribName.contains(searchTerm.toLowerCase())) {
                filteredItems.addElement(contrib);
            }
        });

        defaultListModel = filteredItems;
        countryContributors.setModel(defaultListModel);

    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contribLabel = new javax.swing.JLabel();
        mainCountryContributors = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        largeContributors = new javax.swing.JList<>();
        search = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        filterPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        countryContributors = new javax.swing.JList<>();
        countryName = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 255, 204));

        contribLabel.setText("Contributors for");

        largeContributors.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(largeContributors);

        javax.swing.GroupLayout mainCountryContributorsLayout = new javax.swing.GroupLayout(mainCountryContributors);
        mainCountryContributors.setLayout(mainCountryContributorsLayout);
        mainCountryContributorsLayout.setHorizontalGroup(
            mainCountryContributorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainCountryContributorsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainCountryContributorsLayout.setVerticalGroup(
            mainCountryContributorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainCountryContributorsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        search.setText("Search");

        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
        });

        countryContributors.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        countryContributors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                countryContributorsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(countryContributors);

        javax.swing.GroupLayout filterPanelLayout = new javax.swing.GroupLayout(filterPanel);
        filterPanel.setLayout(filterPanelLayout);
        filterPanelLayout.setHorizontalGroup(
            filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        filterPanelLayout.setVerticalGroup(
            filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                .addContainerGap())
        );

        countryName.setText("COUNTRY");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mainCountryContributors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(search)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 36, Short.MAX_VALUE))
                            .addComponent(filterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(contribLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(countryName)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contribLabel)
                    .addComponent(countryName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search)
                            .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(mainCountryContributors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void countryContributorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_countryContributorsMouseClicked
        Component rootPane = null;
        JOptionPane.showMessageDialog(rootPane, countryContributors.getSelectedValue(), "Selected contributor", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_countryContributorsMouseClicked

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        // TODO add your handling code here:
        int size = searchTextField.getText().length();

        if (size < 1) {
            countryContributors.setVisible(false);
        } else {
            countryContributors.setVisible(true);
        }

        searchFilter(searchTextField.getText());
    }//GEN-LAST:event_searchTextFieldKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel contribLabel;
    private javax.swing.JList<String> countryContributors;
    private javax.swing.JLabel countryName;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> largeContributors;
    private javax.swing.JPanel mainCountryContributors;
    private javax.swing.JLabel search;
    private javax.swing.JTextField searchTextField;
    // End of variables declaration//GEN-END:variables
}
